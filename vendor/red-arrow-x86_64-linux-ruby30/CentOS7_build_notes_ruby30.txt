This directory contains an extract of red-arrow and red-parquet
gems compiled with Ruby 3.0 on CentOS 7.

We need this, because the default development toolchain on CentOS 7 is too
old to compile the latest binaries.

Instead, we add the extra tools on a single build box, and use this to
compile the gem.

Please note, we currently compile separate binaries for Ruby 3.0.x
and have a special stanza in Gemfile to copy the right binary into vendor/cache

Instructions tested 2023-02-23.

To set up the Gemfile to match the versions in era/Gemfile.lock, from an era working copy:
  cd ~/work/era
  bundle exec gem list red-arrow red-parquet
  ruby --version
  DEST=red-arrow-x86_64-linux-ruby30 # for example, based on versions listed above
  mkdir -p "vendor/$DEST"
  (
    printf "%s\n%s\n%s\n" "source 'https://rubygems.org'" \
           "git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }" \
           "gem 'gem-compiler'"
    for gem in red-arrow red-parquet bigdecimal extpp fiddle gio2 glib2 gobject-introspection \
               native-package-installer pkg-config rake; do
      bundle exec gem list "^$gem$"| sed -Ee "s/([^ ]*) \(([^)]*)\)$/gem '\1', '\2'/"
    done
  ) > "vendor/$DEST/Gemfile"
  cd "vendor/$DEST"
  rm -f Gemfile.lock
  mkdir -p vendor/cache
  # Copy all the files across to a CentOS machine to ~/red-arrow-pkg

To set up the toolchain and install red-arrow 10.0.1 and red-parquet 10.0.1
(cf. https://github.com/rubyjs/mini_racer/issues/169):

  sudo yum group install "Development Tools"
  sudo yum install centos-release-scl # handles multiple versions of scl
  sudo yum install scl-utils
  sudo yum install scl-utils-build
  sudo yum install devtoolset-9
  scl enable devtoolset-9 bash # set everything up for version 9
  gcc --version # this should be 9 now

  sudo yum install -y parquet-glib-devel

  # If necessary, set proxy servers, e.g.
  export http_proxy=https://hostname:8080/
  export https_proxy="$http_proxy"
  export HTTP_PROXY="$http_proxy"

  rbenv shell 3.0.4
  scl enable devtoolset-9 bash # set everything up for version 9
  cd ~/red-arrow-pkg
  bundle install
  gem install gem-compiler
  mkdir -p ~/mytmp
  export TMPDIR=~/mytmp
  gem fetch red-arrow --version 10.0.1
  gem fetch red-parquet --version 10.0.1

To compile the gem manually (after following the steps above):
  scl enable devtoolset-9 bash # set everything up for version 9
  cd ~/red-arrow-pkg
  gem compile red-arrow-10.0.1.gem
  gem compile red-parquet-10.0.1.gem



To update a repository with the Ruby 3.0 red-arrow / red-parquet binaries:

  mkdir -p vendor/red-arrow-x86_64-linux-ruby30
  mv ~/red-arrow-pkg/{red-arrow-10.0.1-x86_64-linux.gem,red-parquet-10.0.1-x86_64-linux.gem} vendor/red-arrow-x86_64-linux-ruby30/

Add the following to the Gemfile instead of the existing red-arrow / red-parquet entries:

  # We have built our own CentOS 7 binaries for various gems
  # (with separate gem files for different ruby versions)
  # Copy these into place if needed
  def add_custom_centos_7_binaries(gem_dir_basename, gem_fnames)
    gem_dir = if RUBY_PLATFORM == 'x86_64-linux' && File.exist?('/etc/os-release') &&
                 File.readlines('/etc/os-release').grep(/^(ID="centos"|VERSION_ID="7")$/).count == 2
                "vendor/#{gem_dir_basename}-x86_64-linux-ruby#{RUBY_VERSION.split('.')[0..1].join}"
              end
    require 'fileutils'
    gem_fnames.each do |gem_fname|
      if gem_dir && Dir.exist?(gem_dir)
        begin
          FileUtils.cp "#{gem_dir}/#{gem_fname}", 'vendor/cache/'
        rescue Errno::EACCES
          # Deployer account may not have write access to vendor/cache/
          # (in which case the file in vendor/cache/ is probably already correct)
        end
      else
        FileUtils.rm_f "vendor/cache/#{gem_fname}"
      end
    end
  end

  # We have built our own CentOS 7 binaries for red-arrow and red-parquet
  # Copy these into place if needed
  add_custom_centos_7_binaries('red-arrow', ['red-arrow-10.0.1-x86_64-linux.gem',
                                           'red-parquet-10.0.1-x86_64-linux.gem'])

Add the following to .gitignore

  # Ignored to allow multiple different versions to be copied in by Gemfile
  vendor/cache/mini_racer-0.6.2-x86_64-linux.gem

Run the following commands:
  bundle lock --add-platform x86_64-linux
  egrep -A1 '^    (red-arrow|red-parquet)' Gemfile.lock

Expect to see the following output from grep:
      red-arrow (10.0.1)
        bigdecimal (>= 3.1.0)
  --
      red-arrow (10.0.1-x86_64-linux)
        bigdecimal (>= 3.1.0)
  --
      red-parquet (10.0.1)
        red-arrow (= 10.0.1)
      red-parquet (10.0.1-x86_64-linux)
        red-arrow (= 10.0.1)

If they're not there already, replicate the existing red-arrow and red-parquet
sections, but adding -x86_64-linux after the version number in the first line
each time.

Run tests / commit the changes.
